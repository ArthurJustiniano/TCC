-- ========================================
-- BANCO DE DADOS ROTAFACIL - VERSÃO LIMPA
-- Apenas tabelas utilizadas pelo sistema
-- ========================================

-- ========================================
-- Tabela Usuario
-- ========================================
DROP TABLE IF EXISTS Usuario CASCADE;

CREATE TABLE Usuario (
  id_usuario SERIAL PRIMARY KEY, -- ID numérico incremental
  nome_usuario VARCHAR(100),
  email_usuario VARCHAR(100) UNIQUE,
  senha_usuario VARCHAR(100),
  telefone VARCHAR(20), -- Campo telefone (formato internacional)
  pagamento_status VARCHAR(50),
  tipo_usuario INT NOT NULL,  -- 1 = passageiro, 2 = motorista, 3 = admin
  reset_code VARCHAR(6) NULL,
  reset_expires TIMESTAMP NULL,
  pergunta_seguranca VARCHAR(255) NULL,
  resposta_seguranca VARCHAR(255) NULL
);

-- ========================================
-- Tabela Pagamento
-- ========================================
DROP TABLE IF EXISTS Pagamento CASCADE;

CREATE TABLE Pagamento (
    id_pagamento SERIAL PRIMARY KEY, -- ID numérico incremental
    cod_passageiro INT,
    valor DECIMAL(10, 2),
    data_pagamento DATE,
    status TEXT CHECK (status IN ('PAGO', 'PENDENTE', 'INADIMPLENTE')),
    FOREIGN KEY (cod_passageiro) REFERENCES Usuario(id_usuario)
);

-- ========================================
-- Tabela locations (localização dos motoristas)
-- ========================================
DROP TABLE IF EXISTS public.locations CASCADE;

CREATE TABLE public.locations (
    id SERIAL PRIMARY KEY, -- ID numérico incremental
    user_id INT REFERENCES Usuario(id_usuario) ON DELETE CASCADE,
    latitude DOUBLE PRECISION NOT NULL,
    longitude DOUBLE PRECISION NOT NULL,
    updated_at TIMESTAMPTZ DEFAULT now()
);

-- ========================================
-- Tabela messages (sistema de chat)
-- ========================================
DROP TABLE IF EXISTS public.messages CASCADE;

CREATE TABLE public.messages (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT now() NOT NULL,
  sender_id BIGINT REFERENCES public.Usuario(id_usuario) NOT NULL,
  receiver_id BIGINT REFERENCES public.Usuario(id_usuario) NOT NULL,
  chat_room_id TEXT NOT NULL,
  message TEXT NOT NULL,
  sender_username TEXT,
  is_read BOOLEAN DEFAULT FALSE
);

-- ========================================
-- Tabela message_read_status (controle de mensagens lidas)
-- ========================================
DROP TABLE IF EXISTS public.message_read_status CASCADE;

CREATE TABLE public.message_read_status (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  message_id BIGINT REFERENCES public.messages(id) NOT NULL,
  user_id BIGINT REFERENCES public.Usuario(id_usuario) NOT NULL,
  read_at TIMESTAMPTZ DEFAULT now() NOT NULL,
  UNIQUE(message_id, user_id)
);

-- ========================================
-- Tabela payment_info (informações de pagamento PIX)
-- ========================================
DROP TABLE IF EXISTS public.payment_info CASCADE;

CREATE TABLE IF NOT EXISTS public.payment_info (
  id INT PRIMARY KEY,
  content TEXT,
  amount_content TEXT
);

-- ========================================
-- Tabela noticias (mural de notícias)
-- ========================================
DROP TABLE IF EXISTS public.noticias CASCADE;

CREATE TABLE public.noticias (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  titulo VARCHAR(255) NOT NULL,
  conteudo TEXT NOT NULL,
  data_publicacao DATE NOT NULL DEFAULT CURRENT_DATE,
  autor_id BIGINT REFERENCES public.Usuario(id_usuario) NOT NULL,
  created_at TIMESTAMPTZ DEFAULT now() NOT NULL,
  updated_at TIMESTAMPTZ DEFAULT now() NOT NULL
);

-- ========================================
-- Constraints e Índices
-- ========================================
ALTER TABLE public.locations ADD CONSTRAINT unique_user_id UNIQUE (user_id);
CREATE INDEX idx_noticias_data ON public.noticias(data_publicacao DESC);
CREATE INDEX idx_noticias_autor ON public.noticias(autor_id);
-- ========================================
-- DADOS DE EXEMPLO
-- ========================================

-- Inserir usuários de exemplo
INSERT INTO Usuario (nome_usuario, email_usuario, senha_usuario, telefone, pagamento_status, tipo_usuario, pergunta_seguranca, resposta_seguranca) VALUES
('Ana Souza', 'ana.souza@email.com', 'ana123', '+55 11 90000-0001', 'PAGO', 1, 'Qual o nome do seu primeiro animal de estimação?', 'rex'),
('Bruno Lima', 'bruno.lima@email.com', 'bruno456', '+55 11 90000-0002', 'PENDENTE', 1, 'Qual o nome da sua mãe?', 'maria'),
('Carla Mendes', 'carla.mendes@email.com', 'carla789', '+55 11 90000-0003', 'PAGO', 1, 'Em que cidade você nasceu?', 'fortaleza'),
('James', 'James@email.com', 'james', '+55 11 98888-0004', NULL, 2, 'Qual seu time do coração?', 'flamengo'),
('Leandro', 'Leandro@email.com', 'leandro', '+55 11 98888-0005', NULL, 2, 'Qual o nome da sua primeira escola?', 'escola central'),
('Davi Beraldi dos Santos', 'daviok25@gmail.com', '32424266', '+55 11 97777-0006', NULL, 3, 'Qual sua comida favorita?', 'pizza'),
('Arthur Justiniano', 'justiniano@email.com', 'justiniano', '+55 11 97777-0007', NULL, 3, 'Qual seu filme favorito?', 'matrix'),
('Arthur Nasioseno de Araujo Baroni', 'Baroni@email.com', 'baroni', '+55 11 97777-0008', NULL, 3, 'Qual o nome da sua rua de infância?', 'rua das flores');

-- Inserir pagamentos de exemplo
INSERT INTO Pagamento (cod_passageiro, valor, data_pagamento, status)
SELECT id_usuario, 120.50, '2025-07-01', 'PAGO'
FROM Usuario WHERE nome_usuario = 'Ana Souza';

INSERT INTO Pagamento (cod_passageiro, valor, data_pagamento, status)
SELECT id_usuario, 120.50, NULL, 'PENDENTE'
FROM Usuario WHERE nome_usuario = 'Bruno Lima';

INSERT INTO Pagamento (cod_passageiro, valor, data_pagamento, status)
SELECT id_usuario, 120.50, '2025-06-28', 'PAGO'
FROM Usuario WHERE nome_usuario = 'Carla Mendes';

-- Inserir informações de pagamento PIX
INSERT INTO public.payment_info (id, content, amount_content)
VALUES (
  1,
  'CHAVE PIX: exemplo@provedor.com' || CHR(10) || '(Altere este texto no painel de admin)',
  'Valor mensal: R$ 120,50'
)
ON CONFLICT (id) DO UPDATE
SET 
  content = EXCLUDED.content,
  amount_content = EXCLUDED.amount_content;

-- Inserir notícias de exemplo
INSERT INTO public.noticias (titulo, conteudo, data_publicacao, autor_id)
SELECT 
  'Feriado Municipal',
  'Na próxima segunda-feira, dia 22, não haverá expediente devido ao feriado municipal.',
  '2024-07-18',
  id_usuario
FROM Usuario WHERE nome_usuario = 'Davi Beraldi dos Santos';

INSERT INTO public.noticias (titulo, conteudo, data_publicacao, autor_id)
SELECT 
  'Novo Horário de Funcionamento',
  'O novo horário de funcionamento da empresa passa a ser das 9h às 18h.',
  '2024-07-15',
  id_usuario
FROM Usuario WHERE nome_usuario = 'James';

INSERT INTO public.noticias (titulo, conteudo, data_publicacao, autor_id)
SELECT 
  'Reunião da Diretoria',
  'A próxima reunião da diretoria será realizada na terça-feira, dia 25, às 10h.',
  '2024-07-12',
  id_usuario
FROM Usuario WHERE nome_usuario = 'Arthur Justiniano';